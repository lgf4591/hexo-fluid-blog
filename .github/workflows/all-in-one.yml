name: Auto deploy to github/cloudfare pages

on:
  push:
    branches: [ "main" ]
    paths-ignore: 
      - '**/README.md'
      # - '**/*.yml'
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '0 0,3,13 * * *'  # 每6h一次
  workflow_dispatch:  # 触发手动事件


permissions:
  contents: write

jobs:
  chromego-mergo:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./
    strategy:
      matrix:
        python-version: [3.11]

    steps:
    - name: Use Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Checkout repo With SSH
      uses: lgf4591/CheckoutWithSSHAction@main
      with:
        repo: lgf4591/hexo-fluid-blog
        git_private_key: ${{ secrets.ACTION_KEY }}
    
    - name: Install dependencies
      run: |
        cd python/chromego_merge
        pwd
        ls -la
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run merge script
      run: |
        cd python/chromego_merge
        python meta_merge.py 

    - name: Run shadowrocket merge script
      run: |
        cd python/chromego_merge
        python merge.py

    - name: Update Git With SSH
      uses: lgf4591/GitUpdateWithSSHAction@main


  chromego:
    if: ${{ success() }}
    needs: chromego-mergo
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./
    strategy:
      matrix:
        python-version: [3.11]

    steps:
    - name: Use Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Checkout repo With SSH
      uses: lgf4591/CheckoutWithSSHAction@main
      with:
        git_private_key: ${{ secrets.ACTION_KEY }}

    - name: Install dependencies
      run: |
        pwd
        ls -la
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: create ChromeGo Config markdown post
      run: |
        pwd
        rm -rf downlaod
        mkdir -p downlaod
        sudo apt-get install wget curl axel p7zip-full -y
        cd downlaod
        axel -n 10 --output=ChromeGo.7z https://github.com/bannedbook/fanqiang/releases/download/ChromeGo-latest/ChromeGo.7z
        7z x ChromeGo.7z
        ls -la ChromeGo
        cd ..
        python get_chromego_config.py

    - name: create VPN markdown post
      run: |
        pwd
        python main.py
        cat source/_posts/VPN合集.md

    - name: Update Git With SSH
      uses: lgf4591/GitUpdateWithSSHAction@main
  

  auto-publish:
    runs-on: ubuntu-latest
    if: ${{ success() }}
    needs: chromego
    defaults:
      run:
        working-directory: ./
    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        
    - name: Checkout repo With SSH
      uses: lgf4591/CheckoutWithSSHAction@main
      with:
        git_private_key: ${{ secrets.ACTION_KEY }}

    - name: Install Pandoc
      run: sudo apt-get install -y pandoc

    - name: Install Node Modules
      run: |
        rm -f .yarnclean yarn.lock
        yarn global add hexo-cli
        yarn --non-interactive --silent
        yarn list --depth=0

    - name: Auto Publish to Github Pages
      run: |
        rm -rf ./public
        yarn run hexo clean
        yarn run hexo generate
        yarn run hexo deploy
    
    - name: Publish to Cloudflare Pages
      uses: cloudflare/pages-action@v1
      with:
        apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        projectName: fluid-blog
        directory: ./public
        # Optional: Enable this if you want to have GitHub Deployments triggered
        gitHubToken: ${{ secrets.ACTION_TOKEN }}
        # Optional: Switch what branch you are publishing to.
        # By default this will be the branch which triggered this workflow
        branch: main
        # Optional: Change the working directory
        # All my website content is in the site folder
        workingDirectory: .
        # Optional: Change the Wrangler version, allows you to point to a specific version or a tag such as `beta`
        wranglerVersion: '3'

    - name: Update Git With SSH
      uses: lgf4591/GitUpdateWithSSHAction@main

